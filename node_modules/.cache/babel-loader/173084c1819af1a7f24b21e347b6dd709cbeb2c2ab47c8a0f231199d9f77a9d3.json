{"ast":null,"code":"import React,{useState}from'react';import s from'./HW11.module.css';import s2 from'../../junior.module.css';import{restoreState}from'../hw06/localStorage/localStorage';import SuperRange from'./common/c7-SuperRange/SuperRange';/*\n* 1 - передать значения в оба слайдера\n* 2 - дописать типы и логику функции change\n* 3 - сделать стили в соответствии с дизайном\n* */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function HW11(){function isPlainObject(value){return value instanceof Object&&!Array.isArray(value);}// for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\nconst[value1,setValue1]=useState(restoreState('hw11-value1',0));const[value2,setValue2]=useState(restoreState('hw11-value2',100));const change=(event,newValue)=>{if(Array.isArray(newValue)){// If it's an array, we expect it to have two values.\nconst[newVal1,newVal2]=newValue;// Ensure the first value is not greater than the second value.\nif(newVal1<=newVal2){setValue1(newVal1);// Update the lower bound\nsetValue2(newVal2);// Update the upper bound\n}}else{// If it's a single number, update only the first value.\n// Ensure the single slider value does not exceed value2.\nif(newValue<=value2){setValue1(newValue);}}};return/*#__PURE__*/_jsxs(\"div\",{id:'hw11',children:[/*#__PURE__*/_jsx(\"div\",{className:s2.hwTitle,children:\"Homework #11\"}),/*#__PURE__*/_jsx(\"div\",{className:s2.hw,children:/*#__PURE__*/_jsxs(\"div\",{className:s.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.wrapper,children:[/*#__PURE__*/_jsx(\"span\",{id:'hw11-value',className:s.number,children:value1}),/*#__PURE__*/_jsx(SuperRange,{id:'hw11-single-slider'// сделать так чтоб value1 изменялось // пишет студент\n,value:value1,onChange:(event,val)=>{change(event,val);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:s.wrapper,children:[/*#__PURE__*/_jsx(\"span\",{id:'hw11-value-1',className:s.number,children:value1}),/*#__PURE__*/_jsx(SuperRange,{id:'hw11-double-slider'// сделать так чтоб value1/2 изменялось // пишет студент\n,value:[value1,value2],onChange:change}),/*#__PURE__*/_jsx(\"span\",{id:'hw11-value-2',className:s.number,children:value2})]})]})})]});}export default HW11;","map":{"version":3,"names":["React","useState","s","s2","restoreState","SuperRange","jsx","_jsx","jsxs","_jsxs","HW11","isPlainObject","value","Object","Array","isArray","value1","setValue1","value2","setValue2","change","event","newValue","newVal1","newVal2","id","children","className","hwTitle","hw","container","wrapper","number","onChange","val"],"sources":["/Users/vld/WebTools/pet_projects/src/pages/Junior/s2/hw11/HW11.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport s from './HW11.module.css'\nimport s2 from '../../junior.module.css'\nimport { restoreState } from '../hw06/localStorage/localStorage'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\n\n/*\n* 1 - передать значения в оба слайдера\n* 2 - дописать типы и логику функции change\n* 3 - сделать стили в соответствии с дизайном\n* */\n\nfunction HW11() {\n    function isPlainObject(value: unknown): boolean{\n        return value instanceof Object && !Array.isArray(value)\n    }\n\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\n    const [value1, setValue1] = useState(restoreState<number>('hw11-value1', 0))\n    const [value2, setValue2] = useState(restoreState<number>('hw11-value2', 100))\n\n    const change = (event: Event, newValue: number | number[]) => {\n        if (Array.isArray(newValue)) {\n            // If it's an array, we expect it to have two values.\n            const [newVal1, newVal2] = newValue;\n            // Ensure the first value is not greater than the second value.\n            if (newVal1 <= newVal2) {\n                setValue1(newVal1); // Update the lower bound\n                setValue2(newVal2); // Update the upper bound\n            }\n        } else {\n            // If it's a single number, update only the first value.\n            // Ensure the single slider value does not exceed value2.\n            if (newValue <= value2) {\n                setValue1(newValue);\n            }\n        }\n    };\n\n    return (\n        <div id={'hw11'}>\n            <div className={s2.hwTitle}>Homework #11</div>\n\n            <div className={s2.hw}>\n                <div className={s.container}>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-single-slider'}\n                            // сделать так чтоб value1 изменялось // пишет студент\n                            value={value1}\n                            onChange={(event : Event, val : number | number[])=>{change(event,val)}}\n                        />\n                    </div>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value-1'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-double-slider'}\n                            // сделать так чтоб value1/2 изменялось // пишет студент\n                            value={[value1, value2]}\n                            onChange={change}\n\n                        />\n                        <span id={'hw11-value-2'} className={s.number}>{value2}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HW11\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,CAAC,KAAM,mBAAmB,CACjC,MAAO,CAAAC,EAAE,KAAM,yBAAyB,CACxC,OAASC,YAAY,KAAQ,mCAAmC,CAChE,MAAO,CAAAC,UAAU,KAAM,mCAAmC,CAE1D;AACA;AACA;AACA;AACA,IAJA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMA,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACZ,QAAS,CAAAC,aAAaA,CAACC,KAAc,CAAU,CAC3C,MAAO,CAAAA,KAAK,WAAY,CAAAC,MAAM,EAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,CAC3D,CAEA;AACA,KAAM,CAACI,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAACG,YAAY,CAAS,aAAa,CAAE,CAAC,CAAC,CAAC,CAC5E,KAAM,CAACc,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAACG,YAAY,CAAS,aAAa,CAAE,GAAG,CAAC,CAAC,CAE9E,KAAM,CAAAgB,MAAM,CAAGA,CAACC,KAAY,CAAEC,QAA2B,GAAK,CAC1D,GAAIR,KAAK,CAACC,OAAO,CAACO,QAAQ,CAAC,CAAE,CACzB;AACA,KAAM,CAACC,OAAO,CAAEC,OAAO,CAAC,CAAGF,QAAQ,CACnC;AACA,GAAIC,OAAO,EAAIC,OAAO,CAAE,CACpBP,SAAS,CAACM,OAAO,CAAC,CAAE;AACpBJ,SAAS,CAACK,OAAO,CAAC,CAAE;AACxB,CACJ,CAAC,IAAM,CACH;AACA;AACA,GAAIF,QAAQ,EAAIJ,MAAM,CAAE,CACpBD,SAAS,CAACK,QAAQ,CAAC,CACvB,CACJ,CACJ,CAAC,CAED,mBACIb,KAAA,QAAKgB,EAAE,CAAE,MAAO,CAAAC,QAAA,eACZnB,IAAA,QAAKoB,SAAS,CAAExB,EAAE,CAACyB,OAAQ,CAAAF,QAAA,CAAC,cAAY,CAAK,CAAC,cAE9CnB,IAAA,QAAKoB,SAAS,CAAExB,EAAE,CAAC0B,EAAG,CAAAH,QAAA,cAClBjB,KAAA,QAAKkB,SAAS,CAAEzB,CAAC,CAAC4B,SAAU,CAAAJ,QAAA,eACxBjB,KAAA,QAAKkB,SAAS,CAAEzB,CAAC,CAAC6B,OAAQ,CAAAL,QAAA,eACtBnB,IAAA,SAAMkB,EAAE,CAAE,YAAa,CAACE,SAAS,CAAEzB,CAAC,CAAC8B,MAAO,CAAAN,QAAA,CAAEV,MAAM,CAAO,CAAC,cAC5DT,IAAA,CAACF,UAAU,EACPoB,EAAE,CAAE,oBACJ;AAAA,CACAb,KAAK,CAAEI,MAAO,CACdiB,QAAQ,CAAEA,CAACZ,KAAa,CAAEa,GAAuB,GAAG,CAACd,MAAM,CAACC,KAAK,CAACa,GAAG,CAAC,EAAE,CAC3E,CAAC,EACD,CAAC,cACNzB,KAAA,QAAKkB,SAAS,CAAEzB,CAAC,CAAC6B,OAAQ,CAAAL,QAAA,eACtBnB,IAAA,SAAMkB,EAAE,CAAE,cAAe,CAACE,SAAS,CAAEzB,CAAC,CAAC8B,MAAO,CAAAN,QAAA,CAAEV,MAAM,CAAO,CAAC,cAC9DT,IAAA,CAACF,UAAU,EACPoB,EAAE,CAAE,oBACJ;AAAA,CACAb,KAAK,CAAE,CAACI,MAAM,CAAEE,MAAM,CAAE,CACxBe,QAAQ,CAAEb,MAAO,CAEpB,CAAC,cACFb,IAAA,SAAMkB,EAAE,CAAE,cAAe,CAACE,SAAS,CAAEzB,CAAC,CAAC8B,MAAO,CAAAN,QAAA,CAAER,MAAM,CAAO,CAAC,EAC7D,CAAC,EACL,CAAC,CACL,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAR,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}