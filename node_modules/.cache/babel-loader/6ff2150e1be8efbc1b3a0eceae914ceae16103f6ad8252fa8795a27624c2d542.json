{"ast":null,"code":"import React,{useState}from'react';import SuperInputText from'../../../hw04/common/c1-SuperInputText/SuperInputText';// тип пропсов обычного инпута\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута, кроме type\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\nimport{jsx as _jsx}from\"react/jsx-runtime\";const SuperDebouncedInput=_ref=>{let{onChangeText,onDebouncedChange,...restProps// все остальные пропсы попадут в объект restProps\n}=_ref;const[timerId,setTimerId]=useState(undefined);const onChangeTextCallback=value=>{onChangeText===null||onChangeText===void 0?void 0:onChangeText(value);if(onDebouncedChange){if(timerId){clearTimeout(timerId);// Clear the previous timer\n}const newTimerId=setTimeout(()=>{onDebouncedChange(value);},1500);// Set a new timer for 1500ms\nsetTimerId(newTimerId);}};return/*#__PURE__*/_jsx(SuperInputText,{onChangeText:onChangeTextCallback,...restProps});};export default SuperDebouncedInput;","map":{"version":3,"names":["React","useState","SuperInputText","jsx","_jsx","SuperDebouncedInput","_ref","onChangeText","onDebouncedChange","restProps","timerId","setTimerId","undefined","onChangeTextCallback","value","clearTimeout","newTimerId","setTimeout"],"sources":["/Users/vld/WebTools/pet_projects/src/pages/Junior/s2/hw14/common/c8-SuperDebouncedInput/SuperDebouncedInput.tsx"],"sourcesContent":["import React, {DetailedHTMLProps, InputHTMLAttributes, ReactNode, useState} from 'react'\nimport SuperInputText from '../../../hw04/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута, кроме type\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\nexport type SuperDebouncedInputPropsType = Omit<DefaultInputPropsType, 'type'> & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: ReactNode\n    spanClassName?: string\n} // или экспортировать тип SuperInputTextPropsType\n    & { // плюс специальный пропс SuperPagination\n    onDebouncedChange?: (value: string) => void\n}\n\nconst SuperDebouncedInput: React.FC<SuperDebouncedInputPropsType> = (\n    {\n        onChangeText,\n        onDebouncedChange,\n        ...restProps // все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n\n    const onChangeTextCallback = (value: string) => {\n        onChangeText?.(value);\n\n        if (onDebouncedChange) {\n            if (timerId) {\n                clearTimeout(timerId); // Clear the previous timer\n            }\n\n            const newTimerId = setTimeout(() => {\n                onDebouncedChange(value);\n            }, 1500); // Set a new timer for 1500ms\n\n            setTimerId(newTimerId as unknown as number);\n        }\n    }\n\n    return (\n        <SuperInputText onChangeText={onChangeTextCallback} {...restProps}/>\n    )\n}\n\nexport default SuperDebouncedInput\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAsDC,QAAQ,KAAO,OAAO,CACxF,MAAO,CAAAC,cAAc,KAAM,uDAAuD,CAElF;AAIA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAYA,KAAM,CAAAC,mBAA2D,CAAGC,IAAA,EAM/D,IALD,CACIC,YAAY,CACZC,iBAAiB,CACjB,GAAGC,SAAU;AACjB,CAAC,CAAAH,IAAA,CAED,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAqBW,SAAS,CAAC,CAErE,KAAM,CAAAC,oBAAoB,CAAIC,KAAa,EAAK,CAC5CP,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAGO,KAAK,CAAC,CAErB,GAAIN,iBAAiB,CAAE,CACnB,GAAIE,OAAO,CAAE,CACTK,YAAY,CAACL,OAAO,CAAC,CAAE;AAC3B,CAEA,KAAM,CAAAM,UAAU,CAAGC,UAAU,CAAC,IAAM,CAChCT,iBAAiB,CAACM,KAAK,CAAC,CAC5B,CAAC,CAAE,IAAI,CAAC,CAAE;AAEVH,UAAU,CAACK,UAA+B,CAAC,CAC/C,CACJ,CAAC,CAED,mBACIZ,IAAA,CAACF,cAAc,EAACK,YAAY,CAAEM,oBAAqB,IAAKJ,SAAS,CAAE,CAAC,CAE5E,CAAC,CAED,cAAe,CAAAJ,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}