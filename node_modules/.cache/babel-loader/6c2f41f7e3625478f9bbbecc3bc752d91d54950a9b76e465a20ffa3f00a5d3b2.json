{"ast":null,"code":"var _jsxFileName = \"/Users/vld/WebTools/css_projects/src/pages/Junior/s2/hw11/HW11.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './HW11.module.css';\nimport s2 from '../../junior.module.css';\nimport { restoreState } from '../hw06/localStorage/localStorage';\nimport SuperRange from './common/c7-SuperRange/SuperRange';\n\n/*\n* 1 - передать значения в оба слайдера\n* 2 - дописать типы и логику функции change\n* 3 - сделать стили в соответствии с дизайном\n* */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HW11() {\n  _s();\n  function isPlainObject(value) {\n    return value instanceof Object && !Array.isArray(value);\n  }\n\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\n  const [value1, setValue1] = useState(restoreState('hw11-value1', 0));\n  const [value2, setValue2] = useState(restoreState('hw11-value2', 100));\n  const change = (event, newValue) => {\n    if (Array.isArray(newValue)) {\n      // If it's an array, we expect it to have two values.\n      const [newVal1, newVal2] = newValue;\n      // Ensure the first value is not greater than the second value.\n      if (newVal1 <= newVal2) {\n        setValue1(newVal1); // Update the lower bound\n        setValue2(newVal2); // Update the upper bound\n      }\n    } else {\n      // If it's a single number, update only the first value.\n      // Ensure the single slider value does not exceed value2.\n      if (newValue <= value2) {\n        setValue1(newValue);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw11',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hwTitle,\n      children: \"Homework #11\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hw,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw11-value',\n            className: s.number,\n            children: value1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SuperRange, {\n            id: 'hw11-single-slider'\n            // сделать так чтоб value1 изменялось // пишет студент\n            ,\n            value: value1,\n            onChange: (event, val) => {\n              change(event, val);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw11-value-1',\n            className: s.number,\n            children: value1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SuperRange, {\n            id: 'hw11-double-slider'\n            // сделать так чтоб value1/2 изменялось // пишет студент\n            ,\n            value: [value1, value2],\n            onChange: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw11-value-2',\n            className: s.number,\n            children: value2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(HW11, \"yg1NmVbnAuyl8NmlhQNYyX5aw6U=\");\n_c = HW11;\nexport default HW11;\nvar _c;\n$RefreshReg$(_c, \"HW11\");","map":{"version":3,"names":["React","useState","s","s2","restoreState","SuperRange","jsxDEV","_jsxDEV","HW11","_s","isPlainObject","value","Object","Array","isArray","value1","setValue1","value2","setValue2","change","event","newValue","newVal1","newVal2","id","children","className","hwTitle","fileName","_jsxFileName","lineNumber","columnNumber","hw","container","wrapper","number","onChange","val","_c","$RefreshReg$"],"sources":["/Users/vld/WebTools/css_projects/src/pages/Junior/s2/hw11/HW11.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport s from './HW11.module.css'\nimport s2 from '../../junior.module.css'\nimport { restoreState } from '../hw06/localStorage/localStorage'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\n\n/*\n* 1 - передать значения в оба слайдера\n* 2 - дописать типы и логику функции change\n* 3 - сделать стили в соответствии с дизайном\n* */\n\nfunction HW11() {\n    function isPlainObject(value: unknown): boolean{\n        return value instanceof Object && !Array.isArray(value)\n    }\n\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\n    const [value1, setValue1] = useState(restoreState<number>('hw11-value1', 0))\n    const [value2, setValue2] = useState(restoreState<number>('hw11-value2', 100))\n\n    const change = (event: Event, newValue: number | number[]) => {\n        if (Array.isArray(newValue)) {\n            // If it's an array, we expect it to have two values.\n            const [newVal1, newVal2] = newValue;\n            // Ensure the first value is not greater than the second value.\n            if (newVal1 <= newVal2) {\n                setValue1(newVal1); // Update the lower bound\n                setValue2(newVal2); // Update the upper bound\n            }\n        } else {\n            // If it's a single number, update only the first value.\n            // Ensure the single slider value does not exceed value2.\n            if (newValue <= value2) {\n                setValue1(newValue);\n            }\n        }\n    };\n\n    return (\n        <div id={'hw11'}>\n            <div className={s2.hwTitle}>Homework #11</div>\n\n            <div className={s2.hw}>\n                <div className={s.container}>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-single-slider'}\n                            // сделать так чтоб value1 изменялось // пишет студент\n                            value={value1}\n                            onChange={(event : Event, val : number | number[])=>{change(event,val)}}\n                        />\n                    </div>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value-1'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-double-slider'}\n                            // сделать так чтоб value1/2 изменялось // пишет студент\n                            value={[value1, value2]}\n                            onChange={change}\n\n                        />\n                        <span id={'hw11-value-2'} className={s.number}>{value2}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HW11\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}