{"ast":null,"code":"var _jsxFileName = \"/Users/vld/WebTools/pet_projects/src/pages/Junior/s2/hw09/Clock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SuperButton from '../hw04/common/c2-SuperButton/SuperButton';\nimport { restoreState } from '../hw06/localStorage/localStorage';\nimport s from './Clock.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nfunction Clock() {\n  _s();\n  const [timerId, setTimerId] = useState(undefined);\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n  const [date, setDate] = useState(new Date(restoreState('hw9-date', Date.now())));\n  const [show, setShow] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const start = () => {\n    if (!timerId) {\n      const newTimerId = setInterval(() => {\n        setDate(new Date());\n      }, 1000);\n      setTimerId(newTimerId); // Сохраняем ID таймера\n      setIsProcessing(true); // Обновляем состояние, указывающее на то, что таймер запущен\n    }\n  };\n  const getTwoDigitString = num => num < 10 ? '0' + num : num;\n  const secondsString = getTwoDigitString(date.getSeconds());\n  const minuteString = getTwoDigitString(date.getMinutes());\n  const hourString = getTwoDigitString(date.getHours());\n  const stop = () => {\n    if (timerId) {\n      clearInterval(timerId);\n      setTimerId(undefined); // Обнуляем ID таймера в состоянии\n      setIsProcessing(false); // Обновляем состояние, указывающее на то, что таймер остановлен\n    }\n  };\n  const onMouseEnter = () => {\n    // пишут студенты // показать дату если наведена мышка\n    setShow(true);\n  };\n  const onMouseLeave = () => {\n    // пишут студенты // спрятать дату если мышка не наведена\n    setShow(false);\n  };\n  let formatter1 = new Intl.DateTimeFormat(\"ru\", {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n  const stringTime = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: hourString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: minuteString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: secondsString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 25\n  }, this) || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 15\n  }, this); // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n\n  const stringDate = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: formatter1.format(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 24\n  }, this) || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 64\n  }, this); // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n  // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n  const stringDay = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: daysOfWeek[date.getDay()]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this) || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 65\n  }, this);\n  const stringMonth = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: monthNames[date.getMonth()]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this) || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 69\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.clock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw9-watch',\n      className: s.watch,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: 'hw9-day',\n        children: stringDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        id: 'hw9-time',\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stringTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw9-more',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.more,\n        onFocus: onMouseEnter,\n        onBlur: onMouseLeave,\n        children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw9-month',\n            children: stringMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw9-date',\n            children: stringDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.buttonsContainer,\n      children: [/*#__PURE__*/_jsxDEV(SuperButton, {\n        id: 'hw9-button-start',\n        disabled: isProcessing // пишут студенты // задизэйблить если таймер запущен\n        ,\n        onClick: start,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        id: 'hw9-button-stop',\n        disabled: !isProcessing // пишут студенты // задизэйблить если таймер не запущен\n        ,\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Clock, \"i0+miDHvAFGHp4+uggXYKudXsGA=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","SuperButton","restoreState","s","jsxDEV","_jsxDEV","Fragment","_Fragment","daysOfWeek","monthNames","Clock","_s","timerId","setTimerId","undefined","date","setDate","Date","now","show","setShow","isProcessing","setIsProcessing","start","newTimerId","setInterval","getTwoDigitString","num","secondsString","getSeconds","minuteString","getMinutes","hourString","getHours","stop","clearInterval","onMouseEnter","onMouseLeave","formatter1","Intl","DateTimeFormat","day","month","year","stringTime","children","fileName","_jsxFileName","lineNumber","columnNumber","stringDate","format","stringDay","getDay","stringMonth","getMonth","className","clock","id","watch","more","onFocus","onBlur","buttonsContainer","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/vld/WebTools/pet_projects/src/pages/Junior/s2/hw09/Clock.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport SuperButton from '../hw04/common/c2-SuperButton/SuperButton'\nimport {restoreState} from '../hw06/localStorage/localStorage'\nimport s from './Clock.module.css'\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nfunction Clock() {\n    const [timerId, setTimerId] = useState<NodeJS.Timer | undefined>(undefined)\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n    const [date, setDate] = useState<Date>(new Date(restoreState('hw9-date', Date.now())))\n    const [show, setShow] = useState<boolean>(false)\n    const [isProcessing, setIsProcessing] = useState(false);\n\n\n    const start = () => {\n        if (!timerId) {\n            const newTimerId = setInterval(() => {\n                setDate(new Date());\n            }, 1000);\n            setTimerId(newTimerId); // Сохраняем ID таймера\n            setIsProcessing(true); // Обновляем состояние, указывающее на то, что таймер запущен\n        }\n    };\n\n    const getTwoDigitString = (num: number) => num < 10 ? '0' + num : num\n\n    const secondsString = getTwoDigitString(date.getSeconds())\n\n    const minuteString = getTwoDigitString(date.getMinutes())\n\n    const hourString = getTwoDigitString(date.getHours())\n\n    const stop = () => {\n        if (timerId) {\n            clearInterval(timerId);\n            setTimerId(undefined); // Обнуляем ID таймера в состоянии\n            setIsProcessing(false); // Обновляем состояние, указывающее на то, что таймер остановлен\n        }\n    };\n\n    const onMouseEnter = () => { // пишут студенты // показать дату если наведена мышка\n        (setShow(true))\n    }\n    const onMouseLeave = () => { // пишут студенты // спрятать дату если мышка не наведена\n        setShow(false)\n    }\n    let formatter1 = new Intl.DateTimeFormat(\"ru\", {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n    });\n\n\n    const stringTime =  <div>\n        <span>{hourString}</span>\n        :\n        <span>{minuteString}</span>\n        :\n        <span>{secondsString}</span>\n    </div> || <br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n\n    const stringDate = <div>{formatter1.format(date)}</div> || <br/> // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n    // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n    const stringDay = <div>{daysOfWeek[date.getDay()]}</div> || <br/>;\n    const stringMonth = <div>{monthNames[date.getMonth()]}</div> || <br/>;\n    return (\n        <div className={s.clock}>\n            <div\n                id={'hw9-watch'}\n                className={s.watch}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                <span id={'hw9-day'}>{stringDay}</span>,{' '}\n                <span id={'hw9-time'}>\n                    <strong>{stringTime}</strong>\n                </span>\n            </div>\n\n            <div id={'hw9-more'}>\n                <div className={s.more} onFocus={onMouseEnter} onBlur={onMouseLeave}>\n                    {show ? (\n                        <>\n                            <span id={'hw9-month'}>{stringMonth}</span>,{' '}\n                            <span id={'hw9-date'}>{stringDate}</span>\n                        </>\n                    ) : (\n                        <>\n                            <br/>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            <div className={s.buttonsContainer}>\n                <SuperButton\n                    id={'hw9-button-start'}\n                    disabled={isProcessing}// пишут студенты // задизэйблить если таймер запущен\n                    onClick={start}\n                >\n                    start\n                </SuperButton>\n                <SuperButton\n                    id={'hw9-button-stop'}\n                    disabled={!isProcessing} // пишут студенты // задизэйблить если таймер не запущен\n                    onClick={stop}\n                >\n                    stop\n                </SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Clock\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}